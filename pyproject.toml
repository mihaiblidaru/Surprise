# Release instruction:

# Update changelog and contributors list. If you ever change the
# `requirements[_dev].txt`, also update the hardcoded numpy version here down
# below. Or find a way to always keep both consistent.

# Basic local checks:
# - tests run correctly
# - doc compiles without warning (make clean first).

# Check that the latest RTD build was OK: https://readthedocs.org/projects/surprise/builds/

# The sdist is built on 3.8 by GA:
# - check the sdist building process. It should compile pyx files and the C files
#   should be included in the archive
# - check the install jobs. Look for compilation warnings. Make sure Cython isn't
#   needed and only C files are compiled.
# - check test jobs for warnings etc.

# It's best to just get the sdist artifact from the job instead of re-building it
# locally. Get the "false" sdist: false == with `numpy>=` constraint, not with
# `oldest-supported-numpy`. We don't want `oldest-supported-numpy` as the uploaded
# sdist because it's more restrictive.

# Then upload to test pypi:
#     twine upload blabla.tar.gz -r testpypi

# Check that install works on testpypi, then upload to pypi and check again.
# to install from testpypi:
# pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple scikit-surprise  # noqa
# Doesn't hurt to check that the tests pass after installing from testpypi.

# If not already done, sync gh-pages with the master's README

# push new release tag on github (commit last changes first if needed):
#     git tag vX.Y.Z
#     git push --tags

# Check that RTD has updated 'stable' to the new release (may take a while).

# In the mean time, upload to conda:
#     - Compute SHA256 hash of the new .tar.gz archive (or check it up on PyPI)
#     - update recipe/meta.yaml on feedstock fork consequently (only version and
#       sha should be changed.  Maybe add some import tests).
#     - Push changes, Then open pull request on conda-forge feedstock and merge it
#       when all checks are OK. Access the conda-forge feedstock it by the link on
#       GitHub 'forked from blah blah'.
#     - Check on https://anaconda.org/conda-forge/scikit-surprise that new
#       version is available for all platforms.

# Then, maybe, celebrate.

[project]
name = "scikit-surprise"
description = "An easy-to-use library for recommender systems."
version = "1.1.3"
authors = [
    { name = "Nicolas Hug", email = "contact@nicolas-hug.com" }
]
keywords = [
    "recommender",
    "recommendation system"
]
requires-python = '>=3.8'
dependencies = [
    "joblib>=1.0.0",
    "numpy>=1.17.3",
    "scipy>=1.3.2",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10"
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
file = "LICENSE.md"

[project.urls]
Homepage = "https://surpriselib.com"
Repository = "https://github.com/NicolasHug/Surprise"
Documentation = "https://surprise.readthedocs.io/"

[project.scripts]
surprise = "surprise.__main__:main"

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=40.8.0",
    "cython>=0.29.24",
    "numpy>=1.17.3"
]

